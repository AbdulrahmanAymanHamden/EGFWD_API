{
	"info": {
		"_postman_id": "f769eedf-7584-4227-8637-8168e07eb2b2",
		"name": "Authors",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20983390"
	},
	"item": [
		{
			"name": "get authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test case 1:\r",
							"pm.test(\"TC1: Check Response Code is 200\",function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"// test case 2:\r",
							"pm.test(\"TC2: Check Response Status is OK\",function(){\r",
							"    pm.expect(pm.response.status).to.equal(\"OK\");\r",
							"});\r",
							"\r",
							"// test case 3:\r",
							"pm.collectionVariables.set(\"objectsNum\", pm.response.json().length);\r",
							"var randomNum = Math.floor(Math.random() * pm.collectionVariables.get(\"objectsNum\"));\r",
							"pm.test(\"TC3: Check Object in Body Include ID, BookID, FirstName and LastName\",function(){\r",
							"    pm.expect(pm.response.json()[randomNum].id).to.exist;\r",
							"    pm.expect(pm.response.json()[randomNum].idBook).to.exist;\r",
							"    pm.expect(pm.response.json()[randomNum].firstName).to.exist;\r",
							"    pm.expect(pm.response.json()[randomNum].lastName).to.exist;\r",
							"});\r",
							"var nextID = pm.collectionVariables.get(\"objectsNum\")+1;\r",
							"pm.collectionVariables.set(\"nextID\", nextID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://fakerestapi.azurewebsites.net/api/v1/Authors",
					"protocol": "http",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "create author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test case 1:\r",
							"pm.test(\"TC4: Check Response Code is 201\",function(){\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"// test case 2:\r",
							"pm.test(\"TC5: Check Response Status is Created\",function(){\r",
							"    pm.expect(pm.response.status).to.equal(\"Created\");\r",
							"});\r",
							"\r",
							"// test case 3:\r",
							"pm.test(\"TC6: Check firstname and lastname are included in the request body\",function() {\r",
							"    var jsonReq = JSON.parse(pm.request.body);\r",
							"    if (jsonReq.firstName && jsonReq.lastName) {\r",
							"        console.log(jsonReq.firstName + \",\" + jsonReq.lastName);\r",
							"    }\r",
							"    else {\r",
							"        pm.test(\"TC7: Check response code is 400 when firstName and lastName are not entered\",function(){\r",
							"            pm.expect(pm.response.code).to.equal(400);\r",
							"        });\r",
							"        pm.test(\"TC8: Check response status is Bad Request when firstName and lastName are not entered\",function(){\r",
							"                pm.expect(pm.response.status).to.equal(\"Bad Request\");\r",
							"            });\r",
							"        console.log(\"First Name and Last Name are mandatory\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{nextID}},\r\n  \"idBook\": {{bookID}},\r\n  \"firstName\": {{firstName}},\r\n  \"lastName\": {{lastName}}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://fakerestapi.azurewebsites.net/api/v1/Authors",
					"protocol": "http",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "get author by bookID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test case 1:\r",
							"var num = pm.response.json().length;\r",
							"for(let i = 0; i < num; i++){\r",
							"    pm.test(\"TC9: Check response body objects have the requested book ID\",function(){\r",
							"        pm.expect(pm.response.json()[i].idBook).to.equal(60);\r",
							"    })\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://fakerestapi.azurewebsites.net/api/v1/Authors/authors/books/60",
					"protocol": "http",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"authors",
						"books",
						"60"
					]
				}
			},
			"response": []
		},
		{
			"name": "get author by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test case 1:\r",
							"pm.test(\"TC10: Check response body include the requested id\",function(){\r",
							"    pm.expect(pm.response.json().id).to.equal(97)\r",
							"})\r",
							"// test case 2:\r",
							"pm.test(\"TC11: Check first name and last name include the id\",function(){\r",
							"    pm.expect(pm.response.json().firstName).to.include(97)\r",
							"    pm.expect(pm.response.json().lastName).to.include(97)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://fakerestapi.azurewebsites.net/api/v1/Authors/97",
					"protocol": "http",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"97"
					]
				}
			},
			"response": []
		},
		{
			"name": "update author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonReq = JSON.parse(pm.request.body);\r",
							"// test case 1:\r",
							"pm.test(\"TC12: Check first name is updated\",function(){\r",
							"    pm.expect(pm.response.json().firstName).to.equal(jsonReq.firstName);\r",
							"})\r",
							"// test case 2:\r",
							"pm.test(\"TC13: Check last name is updated\",function(){\r",
							"    pm.expect(pm.response.json().lastName).to.equal(jsonReq.lastName);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"asmaa\",\r\n  \"lastName\": \"abdo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://fakerestapi.azurewebsites.net/api/v1/Authors/0",
					"protocol": "http",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// test case 1:\r",
							"pm.test(\"TC14: Check Response Code is 200\",function(){\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://fakerestapi.azurewebsites.net/api/v1/Authors/70",
					"protocol": "http",
					"host": [
						"fakerestapi",
						"azurewebsites",
						"net"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"70"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "objectsNum",
			"value": "",
			"type": "string"
		},
		{
			"key": "nextID",
			"value": "",
			"type": "string"
		},
		{
			"key": "bookID",
			"value": "500",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "\"Abdo\"",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "\"Ayman\"",
			"type": "string"
		}
	]
}